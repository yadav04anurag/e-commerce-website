@import "https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&family=Prata&display=swap";
/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-200: oklch(.885 .062 18.334);
    --color-red-500: oklch(.637 .237 25.331);
    --color-red-700: oklch(.505 .213 27.518);
    --color-orange-500: oklch(.705 .213 47.604);
    --color-green-500: oklch(.723 .219 149.579);
    --color-blue-50: oklch(.97 .014 254.604);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-blue-700: oklch(.488 .243 264.376);
    --color-slate-100: oklch(.968 .007 247.896);
    --color-gray-50: oklch(.985 .002 247.839);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-relaxed: 1.625;
    --radius-md: .375rem;
    --radius-lg: .5rem;
    --ease-in: cubic-bezier(.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, .2, 1);
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-bounce: bounce 1s infinite;
    --blur-lg: 16px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer components;

@layer utilities {
  .\@container, .\@container-\[inline-size\] {
    container-type: inline-size;
  }

  .pointer-events-auto {
    pointer-events: auto;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .collapse {
    visibility: collapse;
  }

  .invisible {
    visibility: hidden;
  }

  .visible {
    visibility: visible;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .not-sr-only {
    clip: auto;
    white-space: normal;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    position: static;
    overflow: visible;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .sticky {
    position: sticky;
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-3 {
    top: calc(var(--spacing) * 3);
  }

  .-right-1 {
    right: calc(var(--spacing) * -1);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .isolate {
    isolation: isolate;
  }

  .isolation-auto {
    isolation: auto;
  }

  .z-auto {
    z-index: auto;
  }

  .order-first {
    order: -9999;
  }

  .order-last {
    order: 9999;
  }

  .order-none {
    order: 0;
  }

  .col-auto {
    grid-column: auto;
  }

  .col-span-full {
    grid-column: 1 / -1;
  }

  .col-start-auto {
    grid-column-start: auto;
  }

  .col-end-auto {
    grid-column-end: auto;
  }

  .row-auto {
    grid-row: auto;
  }

  .row-span-full {
    grid-row: 1 / -1;
  }

  .row-start-auto {
    grid-row-start: auto;
  }

  .row-end-auto {
    grid-row-end: auto;
  }

  .float-end {
    float: inline-end;
  }

  .float-left {
    float: left;
  }

  .float-none {
    float: none;
  }

  .float-right {
    float: right;
  }

  .float-start {
    float: inline-start;
  }

  .clear-both {
    clear: both;
  }

  .clear-end {
    clear: inline-end;
  }

  .clear-left {
    clear: left;
  }

  .clear-none {
    clear: none;
  }

  .clear-right {
    clear: right;
  }

  .clear-start {
    clear: inline-start;
  }

  .\!container {
    width: 100% !important;

    @media (width >= 40rem) {
      & {
        max-width: 40rem !important;
      }
    }

    @media (width >= 48rem) {
      & {
        max-width: 48rem !important;
      }
    }

    @media (width >= 64rem) {
      & {
        max-width: 64rem !important;
      }
    }

    @media (width >= 80rem) {
      & {
        max-width: 80rem !important;
      }
    }

    @media (width >= 96rem) {
      & {
        max-width: 96rem !important;
      }
    }
  }

  .container {
    width: 100%;

    @media (width >= 40rem) {
      & {
        max-width: 40rem;
      }
    }

    @media (width >= 48rem) {
      & {
        max-width: 48rem;
      }
    }

    @media (width >= 64rem) {
      & {
        max-width: 64rem;
      }
    }

    @media (width >= 80rem) {
      & {
        max-width: 80rem;
      }
    }

    @media (width >= 96rem) {
      & {
        max-width: 96rem;
      }
    }
  }

  .container\! {
    width: 100% !important;

    @media (width >= 40rem) {
      & {
        max-width: 40rem !important;
      }
    }

    @media (width >= 48rem) {
      & {
        max-width: 48rem !important;
      }
    }

    @media (width >= 64rem) {
      & {
        max-width: 64rem !important;
      }
    }

    @media (width >= 80rem) {
      & {
        max-width: 80rem !important;
      }
    }

    @media (width >= 96rem) {
      & {
        max-width: 96rem !important;
      }
    }
  }

  .m-auto {
    margin: auto;
  }

  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }

  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }

  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }

  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }

  .my-20 {
    margin-block: calc(var(--spacing) * 20);
  }

  .my-24 {
    margin-block: calc(var(--spacing) * 24);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }

  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }

  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }

  .mt-40 {
    margin-top: calc(var(--spacing) * 40);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .box-border {
    box-sizing: border-box;
  }

  .box-content {
    box-sizing: content-box;
  }

  .line-clamp-none {
    -webkit-line-clamp: unset;
    -webkit-box-orient: horizontal;
    display: block;
    overflow: visible;
  }

  .block {
    display: block;
  }

  .contents {
    display: contents;
  }

  .flex {
    display: flex;
  }

  .flow-root {
    display: flow-root;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .inline-grid {
    display: inline-grid;
  }

  .inline-table {
    display: inline-table;
  }

  .list-item {
    display: list-item;
  }

  .table {
    display: table;
  }

  .table-caption {
    display: table-caption;
  }

  .table-cell {
    display: table-cell;
  }

  .table-column {
    display: table-column;
  }

  .table-column-group {
    display: table-column-group;
  }

  .table-footer-group {
    display: table-footer-group;
  }

  .table-header-group {
    display: table-header-group;
  }

  .table-row {
    display: table-row;
  }

  .table-row-group {
    display: table-row-group;
  }

  .field-sizing-content {
    field-sizing: content;
  }

  .field-sizing-fixed {
    field-sizing: fixed;
  }

  .aspect-auto {
    aspect-ratio: auto;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-\[1\.5px\] {
    height: 1.5px;
  }

  .h-\[1px\] {
    height: 1px;
  }

  .h-\[2px\] {
    height: 2px;
  }

  .h-auto {
    height: auto;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-none {
    max-height: none;
  }

  .max-h-screen {
    max-height: 100vh;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\/4 {
    width: 50%;
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-36 {
    width: calc(var(--spacing) * 36);
  }

  .w-\[24\%\] {
    width: 24%;
  }

  .w-full {
    width: 100%;
  }

  .w-screen {
    width: 100vw;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[90\%\] {
    max-width: 90%;
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-none {
    max-width: none;
  }

  .max-w-screen {
    max-width: 100vw;
  }

  .min-w-8 {
    min-width: calc(var(--spacing) * 8);
  }

  .min-w-60 {
    min-width: calc(var(--spacing) * 60);
  }

  .min-w-screen {
    min-width: 100vw;
  }

  .flex-1 {
    flex: 1;
  }

  .flex-auto {
    flex: auto;
  }

  .flex-initial {
    flex: 0 auto;
  }

  .flex-none {
    flex: none;
  }

  .flex-shrink {
    flex-shrink: 1;
  }

  .flex-shrink-0 {
    flex-shrink: 0;
  }

  .shrink {
    flex-shrink: 1;
  }

  .flex-grow, .grow {
    flex-grow: 1;
  }

  .basis-auto {
    flex-basis: auto;
  }

  .basis-full {
    flex-basis: 100%;
  }

  .table-auto {
    table-layout: auto;
  }

  .table-fixed {
    table-layout: fixed;
  }

  .caption-bottom {
    caption-side: bottom;
  }

  .caption-top {
    caption-side: top;
  }

  .border-collapse {
    border-collapse: collapse;
  }

  .border-separate {
    border-collapse: separate;
  }

  .origin-bottom {
    transform-origin: bottom;
  }

  .origin-bottom-left {
    transform-origin: 0 100%;
  }

  .origin-bottom-right {
    transform-origin: 100% 100%;
  }

  .origin-center {
    transform-origin: center;
  }

  .origin-left {
    transform-origin: 0;
  }

  .origin-right {
    transform-origin: 100%;
  }

  .origin-top {
    transform-origin: top;
  }

  .origin-top-left {
    transform-origin: 0 0;
  }

  .origin-top-right {
    transform-origin: 100% 0;
  }

  .-translate-full {
    --tw-translate-x: -100%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-full {
    --tw-translate-x: 100%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-3d {
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }

  .translate-none {
    translate: none;
  }

  .scale-3d {
    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);
  }

  .scale-none {
    scale: none;
  }

  .rotate-90 {
    rotate: 90deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .rotate-none {
    rotate: none;
  }

  .transform, .transform-cpu {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .transform-none {
    transform: none;
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-none {
    animation: none;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-pinch-zoom {
    --tw-pinch-zoom: pinch-zoom;
    touch-action: var(--tw-pan-x, ) var(--tw-pan-y, ) var(--tw-pinch-zoom, );
  }

  .resize {
    resize: both;
  }

  .resize-none {
    resize: none;
  }

  .resize-x {
    resize: horizontal;
  }

  .resize-y {
    resize: vertical;
  }

  .snap-none {
    scroll-snap-type: none;
  }

  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }

  .snap-proximity {
    --tw-scroll-snap-strictness: proximity;
  }

  .snap-align-none {
    scroll-snap-align: none;
  }

  .snap-center {
    scroll-snap-align: center;
  }

  .snap-end {
    scroll-snap-align: end;
  }

  .snap-start {
    scroll-snap-align: start;
  }

  .snap-always {
    scroll-snap-stop: always;
  }

  .snap-normal {
    scroll-snap-stop: normal;
  }

  .list-inside {
    list-style-position: inside;
  }

  .list-outside {
    list-style-position: outside;
  }

  .list-decimal {
    list-style-type: decimal;
  }

  .list-disc {
    list-style-type: disc;
  }

  .list-none {
    list-style-type: none;
  }

  .list-image-none {
    list-style-image: none;
  }

  .appearance-auto {
    appearance: auto;
  }

  .appearance-none {
    appearance: none;
  }

  .columns-2 {
    columns: 2;
  }

  .columns-3 {
    columns: 3;
  }

  .columns-4 {
    columns: 4;
  }

  .columns-auto {
    columns: auto;
  }

  .auto-cols-auto {
    grid-auto-columns: auto;
  }

  .auto-cols-fr {
    grid-auto-columns: minmax(0, 1fr);
  }

  .auto-cols-max {
    grid-auto-columns: max-content;
  }

  .auto-cols-min {
    grid-auto-columns: min-content;
  }

  .grid-flow-col {
    grid-auto-flow: column;
  }

  .grid-flow-col-dense {
    grid-auto-flow: column dense;
  }

  .grid-flow-dense {
    grid-auto-flow: dense;
  }

  .grid-flow-row {
    grid-auto-flow: row;
  }

  .grid-flow-row-dense {
    grid-auto-flow: row dense;
  }

  .auto-rows-auto {
    grid-auto-rows: auto;
  }

  .auto-rows-fr {
    grid-auto-rows: minmax(0, 1fr);
  }

  .auto-rows-max {
    grid-auto-rows: max-content;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-\[3fr_1\4 ��\f \] {
    grid-template-columns: 3fr 1 �� ;
  }

  .grid-cols-\[3fr_1\4 ��\10 \] {
    grid-template-columns: 3fr 1 �� ;
  }

  .grid-cols-\[3fr_1fr_1fr\] {
    grid-template-columns: 3fr 1fr 1fr;
  }

  .grid-cols-none {
    grid-template-columns: none;
  }

  .grid-cols-subgrid {
    grid-template-columns: subgrid;
  }

  .grid-rows-none {
    grid-template-rows: none;
  }

  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-row-reverse {
    flex-direction: row-reverse;
  }

  .flex-nowrap {
    flex-wrap: nowrap;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }

  .place-content-around {
    place-content: space-around;
  }

  .place-content-baseline {
    place-content: baseline start;
  }

  .place-content-between {
    place-content: space-between;
  }

  .place-content-center {
    place-content: center;
  }

  .place-content-end {
    place-content: end;
  }

  .place-content-evenly {
    place-content: space-evenly;
  }

  .place-content-start {
    place-content: start;
  }

  .place-content-stretch {
    place-content: stretch;
  }

  .place-items-baseline {
    place-items: baseline;
  }

  .place-items-center {
    place-items: center;
  }

  .place-items-end {
    place-items: end;
  }

  .place-items-start {
    place-items: start;
  }

  .place-items-stretch {
    place-items: stretch stretch;
  }

  .content-around {
    align-content: space-around;
  }

  .content-baseline {
    align-content: baseline;
  }

  .content-between {
    align-content: space-between;
  }

  .content-center {
    align-content: center;
  }

  .content-end {
    align-content: flex-end;
  }

  .content-evenly {
    align-content: space-evenly;
  }

  .content-normal {
    align-content: normal;
  }

  .content-start {
    align-content: flex-start;
  }

  .content-stretch {
    align-content: stretch;
  }

  .items-baseline {
    align-items: baseline;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .items-stretch {
    align-items: stretch;
  }

  .justify-around {
    justify-content: space-around;
  }

  .justify-baseline {
    justify-content: baseline;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-evenly {
    justify-content: space-evenly;
  }

  .justify-normal {
    justify-content: normal;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .justify-stretch {
    justify-content: stretch;
  }

  .justify-items-center {
    justify-items: center;
  }

  .justify-items-end {
    justify-items: end;
  }

  .justify-items-normal {
    justify-items: normal;
  }

  .justify-items-start {
    justify-items: start;
  }

  .justify-items-stretch {
    justify-items: stretch;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }

  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 1;
    }
  }

  .space-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 1;
    }
  }

  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }

  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }

  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }

  .divide-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 1;
    }
  }

  .place-self-auto {
    place-self: auto;
  }

  .place-self-center {
    place-self: center;
  }

  .place-self-end {
    place-self: end;
  }

  .place-self-start {
    place-self: start;
  }

  .place-self-stretch {
    place-self: stretch stretch;
  }

  .self-auto {
    align-self: auto;
  }

  .self-baseline {
    align-self: baseline;
  }

  .self-center {
    align-self: center;
  }

  .self-end {
    align-self: flex-end;
  }

  .self-start {
    align-self: flex-start;
  }

  .self-stretch {
    align-self: stretch;
  }

  .justify-self-auto {
    justify-self: auto;
  }

  .justify-self-center {
    justify-self: center;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .justify-self-start {
    justify-self: flex-start;
  }

  .justify-self-stretch {
    justify-self: stretch;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .scroll-auto {
    scroll-behavior: auto;
  }

  .scroll-smooth {
    scroll-behavior: smooth;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-md {
    border-radius: var(--radius-md);
  }

  .rounded-s {
    border-start-start-radius: .25rem;
    border-end-start-radius: .25rem;
  }

  .rounded-ss {
    border-start-start-radius: .25rem;
  }

  .rounded-e {
    border-start-end-radius: .25rem;
    border-end-end-radius: .25rem;
  }

  .rounded-se {
    border-start-end-radius: .25rem;
  }

  .rounded-ee {
    border-end-end-radius: .25rem;
  }

  .rounded-es {
    border-end-start-radius: .25rem;
  }

  .rounded-t {
    border-top-left-radius: .25rem;
    border-top-right-radius: .25rem;
  }

  .rounded-l {
    border-top-left-radius: .25rem;
    border-bottom-left-radius: .25rem;
  }

  .rounded-tl {
    border-top-left-radius: .25rem;
  }

  .rounded-r {
    border-top-right-radius: .25rem;
    border-bottom-right-radius: .25rem;
  }

  .rounded-tr {
    border-top-right-radius: .25rem;
  }

  .rounded-b {
    border-bottom-right-radius: .25rem;
    border-bottom-left-radius: .25rem;
  }

  .rounded-br {
    border-bottom-right-radius: .25rem;
  }

  .rounded-bl {
    border-bottom-left-radius: .25rem;
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }

  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }

  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }

  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }

  .border-double {
    --tw-border-style: double;
    border-style: double;
  }

  .border-hidden {
    --tw-border-style: hidden;
    border-style: hidden;
  }

  .border-none {
    --tw-border-style: none;
    border-style: none;
  }

  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-gray-400 {
    border-color: var(--color-gray-400);
  }

  .border-orange-500 {
    border-color: var(--color-orange-500);
  }

  .bg-\(--my_variable\) {
    background-color: var(--my_variable);
  }

  .bg-\(color\:--my-color\) {
    background-color: var(--my-color);
  }

  .bg-\[\#0088cc\] {
    background-color: #08c;
  }

  .bg-\[\#414141\] {
    background-color: #414141;
  }

  .bg-\[color\:var\(--my-color\)\] {
    background-color: var(--my-color);
  }

  .bg-\[var\(--my_variable\)\] {
    background-color: var(--my_variable);
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }

  .bg-inherit {
    background-color: inherit;
  }

  .bg-red-200 {
    background-color: var(--color-red-200);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-500\/50, .bg-red-500\/\[50\%\] {
    background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
  }

  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .-bg-conic, .bg-conic {
    --tw-gradient-position: in oklab;
    background-image: conic-gradient(var(--tw-gradient-stops));
  }

  .bg-radial {
    --tw-gradient-position: in oklab;
    background-image: radial-gradient(var(--tw-gradient-stops));
  }

  .bg-none {
    background-image: none;
  }

  .via-none {
    --tw-gradient-via-stops: initial;
  }

  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .box-decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }

  .box-decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }

  .decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }

  .decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }

  .bg-auto {
    background-size: auto;
  }

  .bg-contain {
    background-size: contain;
  }

  .bg-cover {
    background-size: cover;
  }

  .bg-fixed {
    background-attachment: fixed;
  }

  .bg-local {
    background-attachment: local;
  }

  .bg-scroll {
    background-attachment: scroll;
  }

  .bg-clip-border {
    background-clip: border-box;
  }

  .bg-clip-content {
    background-clip: content-box;
  }

  .bg-clip-padding {
    background-clip: padding-box;
  }

  .bg-clip-text {
    background-clip: text;
  }

  .bg-bottom {
    background-position: bottom;
  }

  .bg-center {
    background-position: center;
  }

  .bg-left {
    background-position: 0;
  }

  .bg-left-bottom {
    background-position: 0 100%;
  }

  .bg-left-top {
    background-position: 0 0;
  }

  .bg-right {
    background-position: 100%;
  }

  .bg-right-bottom {
    background-position: 100% 100%;
  }

  .bg-right-top {
    background-position: 100% 0;
  }

  .bg-top {
    background-position: top;
  }

  .bg-no-repeat {
    background-repeat: no-repeat;
  }

  .bg-repeat {
    background-repeat: repeat;
  }

  .bg-repeat-round {
    background-repeat: round;
  }

  .bg-repeat-space {
    background-repeat: space;
  }

  .bg-repeat-x {
    background-repeat: repeat-x;
  }

  .bg-repeat-y {
    background-repeat: repeat-y;
  }

  .bg-origin-border {
    background-origin: border-box;
  }

  .bg-origin-content {
    background-origin: content-box;
  }

  .bg-origin-padding {
    background-origin: padding-box;
  }

  .fill-none {
    fill: none;
  }

  .stroke-none {
    stroke: none;
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .object-fill {
    object-fit: fill;
  }

  .object-none {
    object-fit: none;
  }

  .object-scale-down {
    object-fit: scale-down;
  }

  .object-bottom {
    object-position: bottom;
  }

  .object-center {
    object-position: center;
  }

  .object-left {
    object-position: left;
  }

  .object-left-bottom {
    object-position: left bottom;
  }

  .object-left-top {
    object-position: left top;
  }

  .object-right {
    object-position: right;
  }

  .object-right-bottom {
    object-position: right bottom;
  }

  .object-right-top {
    object-position: right top;
  }

  .object-top {
    object-position: top;
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-45 {
    padding: calc(var(--spacing) * 45);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .py-23 {
    padding-block: calc(var(--spacing) * 23);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }

  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }

  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-5 {
    padding-left: calc(var(--spacing) * 5);
  }

  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }

  .text-center {
    text-align: center;
  }

  .text-end {
    text-align: end;
  }

  .text-justify {
    text-align: justify;
  }

  .text-left {
    text-align: left;
  }

  .text-right {
    text-align: right;
  }

  .text-start {
    text-align: start;
  }

  .align-baseline {
    vertical-align: baseline;
  }

  .align-bottom {
    vertical-align: bottom;
  }

  .align-middle {
    vertical-align: middle;
  }

  .align-sub {
    vertical-align: sub;
  }

  .align-super {
    vertical-align: super;
  }

  .align-text-bottom {
    vertical-align: text-bottom;
  }

  .align-text-top {
    vertical-align: text-top;
  }

  .align-top {
    vertical-align: top;
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[12px\] {
    font-size: 12px;
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .text-balance {
    text-wrap: balance;
  }

  .text-nowrap {
    text-wrap: nowrap;
  }

  .text-pretty {
    text-wrap: pretty;
  }

  .text-wrap {
    text-wrap: wrap;
  }

  .break-normal {
    overflow-wrap: normal;
    word-break: normal;
  }

  .break-words {
    overflow-wrap: break-word;
  }

  .break-all {
    word-break: break-all;
  }

  .break-keep {
    word-break: keep-all;
  }

  .overflow-ellipsis {
    text-overflow: ellipsis;
  }

  .text-clip {
    text-overflow: clip;
  }

  .text-ellipsis {
    text-overflow: ellipsis;
  }

  .hyphens-auto {
    hyphens: auto;
  }

  .hyphens-manual {
    hyphens: manual;
  }

  .hyphens-none {
    hyphens: none;
  }

  .whitespace-break-spaces {
    white-space: break-spaces;
  }

  .whitespace-normal {
    white-space: normal;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .whitespace-pre {
    white-space: pre;
  }

  .whitespace-pre-line {
    white-space: pre-line;
  }

  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }

  .\[color\:red\] {
    color: red;
  }

  .\[color\:red\]\/50 {
    color: oklab(62.7955% .224863 .125846 / .5);
  }

  .\[color\:red\]\/50\! {
    color: oklab(62.7955% .224863 .125846 / .5) !important;
  }

  .text-\[\#414141\] {
    color: #414141;
  }

  .text-black {
    color: var(--color-black);
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-white {
    color: var(--color-white);
  }

  .capitalize {
    text-transform: capitalize;
  }

  .lowercase {
    text-transform: lowercase;
  }

  .normal-case {
    text-transform: none;
  }

  .uppercase {
    text-transform: uppercase;
  }

  .italic {
    font-style: italic;
  }

  .not-italic {
    font-style: normal;
  }

  .font-stretch-condensed {
    font-stretch: condensed;
  }

  .font-stretch-expanded {
    font-stretch: expanded;
  }

  .font-stretch-extra-condensed {
    font-stretch: extra-condensed;
  }

  .font-stretch-extra-expanded {
    font-stretch: extra-expanded;
  }

  .font-stretch-normal {
    font-stretch: normal;
  }

  .font-stretch-semi-condensed {
    font-stretch: semi-condensed;
  }

  .font-stretch-semi-expanded {
    font-stretch: semi-expanded;
  }

  .font-stretch-ultra-condensed {
    font-stretch: ultra-condensed;
  }

  .font-stretch-ultra-expanded {
    font-stretch: ultra-expanded;
  }

  .diagonal-fractions {
    --tw-numeric-fraction: diagonal-fractions;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .lining-nums {
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .oldstyle-nums {
    --tw-numeric-figure: oldstyle-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .proportional-nums {
    --tw-numeric-spacing: proportional-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .slashed-zero {
    --tw-slashed-zero: slashed-zero;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .stacked-fractions {
    --tw-numeric-fraction: stacked-fractions;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .normal-nums {
    font-variant-numeric: normal;
  }

  .line-through {
    text-decoration-line: line-through;
  }

  .no-underline {
    text-decoration-line: none;
  }

  .overline {
    text-decoration-line: overline;
  }

  .underline {
    text-decoration-line: underline;
  }

  .decoration-dashed {
    text-decoration-style: dashed;
  }

  .decoration-dotted {
    text-decoration-style: dotted;
  }

  .decoration-double {
    text-decoration-style: double;
  }

  .decoration-solid {
    text-decoration-style: solid;
  }

  .decoration-wavy {
    text-decoration-style: wavy;
  }

  .decoration-auto {
    text-decoration-thickness: auto;
  }

  .decoration-from-font {
    text-decoration-thickness: from-font;
  }

  .underline-offset-auto {
    text-underline-offset: auto;
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }

  .accent-auto {
    accent-color: auto;
  }

  .scheme-dark {
    color-scheme: dark;
  }

  .scheme-light {
    color-scheme: light;
  }

  .scheme-light-dark {
    color-scheme: light dark;
  }

  .scheme-normal {
    color-scheme: normal;
  }

  .scheme-only-dark {
    color-scheme: dark only;
  }

  .scheme-only-light {
    color-scheme: light only;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-100 {
    opacity: 1;
  }

  .mix-blend-plus-darker {
    mix-blend-mode: plus-darker;
  }

  .mix-blend-plus-lighter {
    mix-blend-mode: plus-lighter;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .inset-ring {
    --tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-gray-300 {
    --tw-shadow-color: var(--color-gray-300);
  }

  .shadow-initial {
    --tw-shadow-color: initial;
  }

  .inset-shadow-initial {
    --tw-inset-shadow-color: initial;
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;

    @media (forced-colors: active) {
      & {
        outline-offset: 2px;
        outline: 2px solid #0000;
      }
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-none {
    --tw-blur: ;
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow {
    --tw-drop-shadow: drop-shadow(0 1px 2px #0000001a) drop-shadow(0 1px 1px #0000000f);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-none {
    --tw-drop-shadow: ;
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-none {
    --tw-backdrop-blur: ;
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-grayscale {
    --tw-backdrop-grayscale: grayscale(100%);
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-invert {
    --tw-backdrop-invert: invert(100%);
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-sepia {
    --tw-backdrop-sepia: sepia(100%);
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-filter {
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .transition-discrete {
    transition-behavior: allow-discrete;
  }

  .transition-normal {
    transition-behavior: normal;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .duration-700 {
    --tw-duration: .7s;
    transition-duration: .7s;
  }

  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }

  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }

  .will-change-auto {
    will-change: auto;
  }

  .will-change-contents {
    will-change: contents;
  }

  .will-change-scroll {
    will-change: scroll-position;
  }

  .will-change-transform {
    will-change: transform;
  }

  .contain-inline-size {
    --tw-contain-size: inline-size;
    contain: var(--tw-contain-size, ) var(--tw-contain-layout, ) var(--tw-contain-paint, ) var(--tw-contain-style, );
  }

  .contain-layout {
    --tw-contain-layout: layout;
    contain: var(--tw-contain-size, ) var(--tw-contain-layout, ) var(--tw-contain-paint, ) var(--tw-contain-style, );
  }

  .contain-paint {
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size, ) var(--tw-contain-layout, ) var(--tw-contain-paint, ) var(--tw-contain-style, );
  }

  .contain-size {
    --tw-contain-size: size;
    contain: var(--tw-contain-size, ) var(--tw-contain-layout, ) var(--tw-contain-paint, ) var(--tw-contain-style, );
  }

  .contain-style {
    --tw-contain-style: style;
    contain: var(--tw-contain-size, ) var(--tw-contain-layout, ) var(--tw-contain-paint, ) var(--tw-contain-style, );
  }

  .contain-content {
    contain: content;
  }

  .contain-none {
    contain: none;
  }

  .contain-strict {
    contain: strict;
  }

  .content-none {
    --tw-content: none;
    content: none;
  }

  .forced-color-adjust-auto {
    forced-color-adjust: auto;
  }

  .forced-color-adjust-none {
    forced-color-adjust: none;
  }

  .outline-dashed {
    --tw-outline-style: dashed;
    outline-style: dashed;
  }

  .outline-dotted {
    --tw-outline-style: dotted;
    outline-style: dotted;
  }

  .outline-double {
    --tw-outline-style: double;
    outline-style: double;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .outline-solid {
    --tw-outline-style: solid;
    outline-style: solid;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .backface-visible {
    backface-visibility: visible;
  }

  .divide-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 1;
    }
  }

  .duration-initial {
    --tw-duration: initial;
  }

  .ease-initial {
    --tw-ease: initial;
  }

  .perspective-none {
    perspective: none;
  }

  .perspective-origin-bottom {
    perspective-origin: bottom;
  }

  .perspective-origin-bottom-left {
    perspective-origin: 0 100%;
  }

  .perspective-origin-bottom-right {
    perspective-origin: 100% 100%;
  }

  .perspective-origin-center {
    perspective-origin: center;
  }

  .perspective-origin-left {
    perspective-origin: 0;
  }

  .perspective-origin-right {
    perspective-origin: 100%;
  }

  .perspective-origin-top {
    perspective-origin: top;
  }

  .perspective-origin-top-left {
    perspective-origin: 0 0;
  }

  .perspective-origin-top-right {
    perspective-origin: 100% 0;
  }

  .ring-inset {
    --tw-ring-inset: inset;
  }

  .transform-3d {
    transform-style: preserve-3d;
  }

  .transform-border {
    transform-box: border-box;
  }

  .transform-content {
    transform-box: content-box;
  }

  .transform-fill {
    transform-box: fill-box;
  }

  .transform-flat {
    transform-style: flat;
  }

  .transform-stroke {
    transform-box: stroke-box;
  }

  .transform-view {
    transform-box: view-box;
  }

  .group-hover\:block {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        & {
          display: block;
        }
      }
    }
  }

  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        & {
          --tw-scale-x: 110%;
          --tw-scale-y: 110%;
          --tw-scale-z: 110%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }

  .hover\:border-gray-400 {
    &:hover {
      @media (hover: hover) {
        & {
          border-color: var(--color-gray-400);
        }
      }
    }
  }

  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        & {
          background-color: var(--color-blue-700);
        }
      }
    }
  }

  .hover\:bg-gray-800 {
    &:hover {
      @media (hover: hover) {
        & {
          background-color: var(--color-gray-800);
        }
      }
    }
  }

  .hover\:bg-gray-900 {
    &:hover {
      @media (hover: hover) {
        & {
          background-color: var(--color-gray-900);
        }
      }
    }
  }

  .hover\:bg-red-700 {
    &:hover {
      @media (hover: hover) {
        & {
          background-color: var(--color-red-700);
        }
      }
    }
  }

  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        & {
          color: var(--color-black);
        }
      }
    }
  }

  .focus\:border-blue-500 {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }

  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:ring-blue-400 {
    &:focus {
      --tw-ring-color: var(--color-blue-400);
    }
  }

  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }

  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }

  .active\:bg-gray-700 {
    &:active {
      background-color: var(--color-gray-700);
    }
  }

  .sm\:mb-3 {
    @media (width >= 40rem) {
      & {
        margin-bottom: calc(var(--spacing) * 3);
      }
    }
  }

  .sm\:block {
    @media (width >= 40rem) {
      & {
        display: block;
      }
    }
  }

  .sm\:flex {
    @media (width >= 40rem) {
      & {
        display: flex;
      }
    }
  }

  .sm\:grid {
    @media (width >= 40rem) {
      & {
        display: grid;
      }
    }
  }

  .sm\:hidden {
    @media (width >= 40rem) {
      & {
        display: none;
      }
    }
  }

  .sm\:h-\[2px\] {
    @media (width >= 40rem) {
      & {
        height: 2px;
      }
    }
  }

  .sm\:w-1\/2 {
    @media (width >= 40rem) {
      & {
        width: 50%;
      }
    }
  }

  .sm\:w-4\/5 {
    @media (width >= 40rem) {
      & {
        width: 80%;
      }
    }
  }

  .sm\:w-12 {
    @media (width >= 40rem) {
      & {
        width: calc(var(--spacing) * 12);
      }
    }
  }

  .sm\:w-16 {
    @media (width >= 40rem) {
      & {
        width: calc(var(--spacing) * 16);
      }
    }
  }

  .sm\:w-24 {
    @media (width >= 40rem) {
      & {
        width: calc(var(--spacing) * 24);
      }
    }
  }

  .sm\:w-\[18\.7\%\] {
    @media (width >= 40rem) {
      & {
        width: 18.7%;
      }
    }
  }

  .sm\:w-\[80\%\] {
    @media (width >= 40rem) {
      & {
        width: 80%;
      }
    }
  }

  .sm\:w-\[450px\] {
    @media (width >= 40rem) {
      & {
        width: 450px;
      }
    }
  }

  .sm\:w-full {
    @media (width >= 40rem) {
      & {
        width: 100%;
      }
    }
  }

  .sm\:flex-1 {
    @media (width >= 40rem) {
      & {
        flex: 1;
      }
    }
  }

  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      & {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }
    }
  }

  .sm\:flex-col {
    @media (width >= 40rem) {
      & {
        flex-direction: column;
      }
    }
  }

  .sm\:flex-row {
    @media (width >= 40rem) {
      & {
        flex-direction: row;
      }
    }
  }

  .sm\:items-start {
    @media (width >= 40rem) {
      & {
        align-items: flex-start;
      }
    }
  }

  .sm\:justify-normal {
    @media (width >= 40rem) {
      & {
        justify-content: normal;
      }
    }
  }

  .sm\:gap-2 {
    @media (width >= 40rem) {
      & {
        gap: calc(var(--spacing) * 2);
      }
    }
  }

  .sm\:gap-10 {
    @media (width >= 40rem) {
      & {
        gap: calc(var(--spacing) * 10);
      }
    }
  }

  .sm\:gap-12 {
    @media (width >= 40rem) {
      & {
        gap: calc(var(--spacing) * 12);
      }
    }
  }

  .sm\:overflow-y-scroll {
    @media (width >= 40rem) {
      & {
        overflow-y: scroll;
      }
    }
  }

  .sm\:px-8 {
    @media (width >= 40rem) {
      & {
        padding-inline: calc(var(--spacing) * 8);
      }
    }
  }

  .sm\:px-\[5vw\] {
    @media (width >= 40rem) {
      & {
        padding-inline: 5vw;
      }
    }
  }

  .sm\:py-0 {
    @media (width >= 40rem) {
      & {
        padding-block: calc(var(--spacing) * 0);
      }
    }
  }

  .sm\:py-3 {
    @media (width >= 40rem) {
      & {
        padding-block: calc(var(--spacing) * 3);
      }
    }
  }

  .sm\:text-2xl {
    @media (width >= 40rem) {
      & {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
  }

  .sm\:text-sm {
    @media (width >= 40rem) {
      & {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
    }
  }

  .md\:w-1\/3 {
    @media (width >= 48rem) {
      & {
        width: 33.3333%;
      }
    }
  }

  .md\:w-2\/3 {
    @media (width >= 48rem) {
      & {
        width: 66.6667%;
      }
    }
  }

  .md\:w-4\/5 {
    @media (width >= 48rem) {
      & {
        width: 80%;
      }
    }
  }

  .md\:w-11 {
    @media (width >= 48rem) {
      & {
        width: calc(var(--spacing) * 11);
      }
    }
  }

  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      & {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
    }
  }

  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      & {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }
    }
  }

  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      & {
        grid-template-columns: repeat(4, minmax(0, 1fr));
      }
    }
  }

  .md\:flex-row {
    @media (width >= 48rem) {
      & {
        flex-direction: row;
      }
    }
  }

  .md\:px-\[7vw\] {
    @media (width >= 48rem) {
      & {
        padding-inline: 7vw;
      }
    }
  }

  .md\:text-left {
    @media (width >= 48rem) {
      & {
        text-align: left;
      }
    }
  }

  .md\:text-base {
    @media (width >= 48rem) {
      & {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
    }
  }

  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      & {
        grid-template-columns: repeat(4, minmax(0, 1fr));
      }
    }
  }

  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      & {
        grid-template-columns: repeat(5, minmax(0, 1fr));
      }
    }
  }

  .lg\:text-5xl {
    @media (width >= 64rem) {
      & {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
      }
    }
  }
}

a.active hr {
  display: block;
}

* {
  font-family: Outfit;
}

.prata-regular {
  font-family: Prata, serif;
  font-style: normal;
  font-weight: 400;
}

@media (width <= 640px) {
  a.active {
    color: #fff;
    background: #000;
  }
}

::-webkit-scrollbar {
  display: none;
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-pan-x {
  syntax: "*";
  inherits: false
}

@property --tw-pan-y {
  syntax: "*";
  inherits: false
}

@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false
}

@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-ordinal {
  syntax: "*";
  inherits: false
}

@property --tw-slashed-zero {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-figure {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@property --tw-contain-size {
  syntax: "*";
  inherits: false
}

@property --tw-contain-layout {
  syntax: "*";
  inherits: false
}

@property --tw-contain-paint {
  syntax: "*";
  inherits: false
}

@property --tw-contain-style {
  syntax: "*";
  inherits: false
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}
/*# sourceMappingURL=index.61d3354a.css.map */
